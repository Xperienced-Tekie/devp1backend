generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  username  String    @unique
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  NFTs      Nftpost[]
  balance   Float     @default(0.0)
    chatChannels  ChatChannel[] @relation("UserChatChannels") 
  messages      ChatMessage[] 
}

model Nftpost {
  id          Int      @id @default(autoincrement())
  name        String
  userId      Int
  image       String?
  description String
  blockchain  String
  isPaid      Boolean  @default(false)
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model BlogPost {
  id          Int      @id @default(autoincrement())
  title       String   
  content     String  
  image       String?  // Optional: only include if you're storing image URLs or paths
  createdAt   DateTime @default(now())
  updatedAt   DateTime  @updatedAt
}

model ChatChannel {
  id          Int           @id @default(autoincrement())
  name        String?
  isDirect    Boolean       @default(false)
  users       User[]        @relation("UserChatChannels") 
  messages    ChatMessage[] 
}

model ChatMessage {
  id            Int          @id @default(autoincrement())
  content       String
  createdAt     DateTime     @default(now())
  userId        Int
  chatChannelId Int
  user          User         @relation(fields: [userId], references: [id])
  chatChannel   ChatChannel  @relation(fields: [chatChannelId], references: [id])
}



